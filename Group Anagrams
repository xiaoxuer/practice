class Solution {
public:
    static bool my_compare(string str1, string str2) {
        int len = str1.length();
        for(int i = 0; i < len; i++) {
            if(str1[i] < str2[i])
                return true;
            else if(str1[i] > str2[i])
                return false;
        }
        return false;
    }
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        int len = strs.size();
        unordered_map<string, vector<string>> hash_map;
        vector<vector<string>> res;
        if(len == 0) return res;
        for(int i = 0; i < len; i++) {
            string temp = strs[i];
            sort(temp.begin(), temp.end());
            hash_map[temp].push_back(strs[i]);
        }
        for(auto itr : hash_map) {
            vector<string> cur = itr.second;
            sort(cur.begin(), cur.end(), my_compare);
            res.push_back(cur);
        }
        /*
        for(auto itr = hash_map.begin(); itr != hash_map.end(); itr++) {
            vector<string> cur = itr->second;
            sort(cur.begin(), cur.end(), my_compare);
            res.push_back(cur);
        }
        */
        return res;
        
    }
};

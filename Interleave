class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        int len_1 = s1.length();
        int len_2 = s2.length();
        int len_3 = s3.length();
        if(len_1 + len_2 != len_3) {
            return false;    
        }
        vector<vector<int>> dp(len_1 + 1, vector<int>(len_2 + 1, 0));
        dp[0][0] = 1;
        if(len_3 == 0) return dp[0][0];
        for(int i = 1; i <= len_1; i++) {
            dp[i][0] = dp[i-1][0] && (s1[i-1] == s3[i-1]);
        }
  
        for(int j = 1; j <= len_2; j++) {
            dp[0][j] = dp[0][j-1] && (s2[j-1] == s3[j-1]);
        }

        for(int i = 1; i <= len_1; i++) {
             for(int j = 1; j <= len_2; j++) {
                dp[i][j] = (dp[i-1][j] && (s1[i-1] == s3[i+j-1])) ||
                            (dp[i][j-1]  && (s2[j-1] == s3[i+j-1]));
             }
        }
        return dp[len_1][len_2];
    }
};

class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int size = nums.size();
        int dp_max[size];
        int dp_min[size];
        memset(dp_max, 0, sizeof(dp_max));
        memset(dp_min, 0, sizeof(dp_min));
        int res = 0;
        if(size == 0)
            return 0;
        /* init */
        dp_max[0] = nums[0];
        dp_min[0] = nums[0];
        res = nums[0];
        for(int i = 1; i < size; i++) { 
            dp_max[i] = max(nums[i], dp_max[i-1] * nums[i]);
            dp_max[i] = max(dp_max[i], dp_min[i-1] * nums[i]);
            dp_min[i] = min(nums[i], dp_max[i-1] * nums[i]);
            dp_min[i] = min(dp_min[i], dp_min[i-1] * nums[i]);
            res = max(res, dp_max[i]);
        }
        return res;
    } 
};

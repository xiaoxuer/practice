/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int m, int n) {
        ListNode* dummy = new ListNode(-1);
        ListNode* prev = dummy;
        prev->next = head;
        for(int i = 0; i < m; i++) {
            if(prev != NULL)
                prev = prev->next;
            else
                return head;
        }
        if(prev == NULL)
            return head;
            
        ListNode* rev_start = prev->next;
        ListNode* rev_cur = rev_start;
        ListNode* rev_next;
        ListNode* rev_pre = NULL;
        int rev_len = n - m + 1;
        
        for(int k = 0; k < rev_len; k++) {
             rev_next = rev_cur->next;
             rev_cur->next = rev_pre;
             
        }
    }
};

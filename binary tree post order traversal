/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        stack<TreeNode*> sta;
        vector<int> res;
        TreeNode* cur, *prev;
        cur = root;
        prev = NULL;
        while(cur != NULL || !sta.empty()) {
            if(cur != NULL) {
                sta.push(cur);
                while(cur->left != NULL) {
                    sta.push(cur->left);
                    cur = cur->left;
                }
                cur = NULL;
            } else { 
                cur = sta.top();
                if(cur->right != NULL && cur->right != prev) {
                    cur = cur->right;
                } else {
                     res.push_back(cur->val);
                     sta.pop();
                     prev = cur;
                     cur = NULL; // here to ensure next node is the top of the stack 
                }
            }
        }
        return res;
    }
};
